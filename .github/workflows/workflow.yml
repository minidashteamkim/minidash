name: Pull Request Check # 워크플로우 이름

on: # 워크플로우 실행 트리거
  pull_request: # pull_request가 실행될 때만
    types: [opened, synchronize] # PR이 생성되거나 업데이트될 때

jobs: # 작업 정의
  check: 
    runs-on: ubuntu-latest # 우분투 환경
    permissions: # 권한 설정
      pull-requests: write # PR에 쓰기 권한 설정
    steps: # 실제 작업 단계
      - uses: actions/github-script@v7
        with:
          script: | # 스크립트 시작
            async function run() {
              const pull_request = context.payload.pull_request; // PR 객체 가져오기
              if (pull_request === undefined) { // PR이 없는 경우
                console.log("This is not a pull request"); // "This is not a pull request" 출력
                return; // 종료
              }

              const body = pull_request.body;

              const message = "아래 기입 내용을 작성해주시고, 해당 라인을 삭제해주세요.";

              if (!body || body.includes(message)) {
                try {
                  // PR에 코멘트를 추가합니다.
                  await github.rest.issues.createComment({ // PR에 코멘트 추가
                    owner: context.repo.owner, // 저장소 소유자
                    repo: context.repo.repo, // 저장소 이름
                    issue_number: pull_request.number, // PR 번호
                    body: "해당 PR은 가이드라인을 준수하지 않았습니다. 때문에 PR을 닫도록 하겠습니다. 가이드라인을 준수하여 다시 PR 요청을 해주세요. :)" // 코멘트 내용
                  });

                  // PR을 닫습니다.
                  await github.rest.pulls.update({ // PR을 닫음
                    owner: context.repo.owner, // 저장소 소유자
                    repo: context.repo.repo, // 저장소 이름
                    pull_number: pull_request.number, // PR 번호
                    state: "closed" // 상태를 닫힘으로 변경
                  });
                  console.log("PR was closed successfully."); // 성공 메시지 출력
                } catch (error) {
                  console.error("Error occurred while closing PR:", error); // 오류 메시지 출력
                }
              }   
            }

            run(); // 스크립트 실행
